{
  "permissions": {
    "allow": [
      "Bash(node:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nâœ¨ Add complete Student Sync System with dynamic activity titles\n\nðŸŽ¯ Features implemented:\n- Dynamic student HTML generation from Google Sheets\n- Column L â†’ Vocabulary Tab (iframe embedding)\n- Column M â†’ Finished Activities (comma-separated HTML links)\n- Column N â†’ Learning Objectives (text content)\n- Dynamic activity titles extracted from URL paths\n- Clean, interactive activity cards with hover effects\n- Automatic sync functionality (manual and auto modes)\n\nðŸ”§ Technical improvements:\n- Robust CSV parsing with proper quote handling\n- Error handling and fallback mechanisms\n- Mobile-responsive design\n- Professional styling with glass morphism effects\n\nðŸ“Š Working URLs transform to clean titles:\n- papers-please â†’ Papers Please\n- unlimited-power â†’ Unlimited Power\n- incentive-schemes â†’ Incentive Schemes\n\nðŸš€ Ready for production use with reliable Google Sheets integration\n\nðŸ¤– Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git remote add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nðŸŽ“ Update Student Sync System with latest features\n\nðŸ“Š Student Files Updated:\n- Georgi-Ojeda-Page.html (new with clean name format)\n- Justine-Bon-Page.html (updated with latest data)\n- Teacher-Home.html (teacher dashboard)\n- Template.html (dynamic title with student names)\n\nâœ¨ Latest Features:\n- Dynamic browser tab titles with student names\n- Hidden Google Sheets UI in Vocabulary tabs\n- Finished Activities in reverse order (newest first)\n- Dynamic activity titles from URL paths\n- Column L â†’ Vocabulary, Column M â†’ Activities, Column N â†’ Objectives\n\nðŸ”§ Technical Updates:\n- Enhanced student-file-manager.js with URL processing\n- Improved CSV parsing and error handling\n- Mobile-responsive design with professional styling\n\nðŸš€ Ready for GitHub Pages deployment\n\nðŸ¤– Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(git reset:*)",
      "Bash(git rm:*)",
      "Bash(grep:*)",
      "Bash(git init:*)",
      "Bash(git config:*)",
      "Bash(copy:*)",
      "WebFetch(domain:github.com)",
      "Read(//c/Users/admin/PC Files/02 Work/01 Jerome/01 English Teaching/**)",
      "Bash(git submodule:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(tasklist)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "WebFetch(domain:docs.google.com)",
      "Bash(curl:*)",
      "Bash(timeout:*)",
      "Bash(cp:*)",
      "Bash(git pull:*)",
      "Bash(git remote set-url:*)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "WebFetch(domain:mimlanguageservices.github.io)",
      "Read(//c/Users/admin/Desktop/**)",
      "Bash(dir \"C:\\Users\\admin\\PC Files\\02 Work\\01 Jerome\\01 English Teaching\\09 Coding\\Students\")",
      "Bash(cat:*)",
      "Bash(git ls-tree:*)",
      "Bash(rmdir:*)",
      "Bash(dir:*)",
      "Read(//c/Users/admin/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/**)",
      "Bash(\"C:\\Users\\admin\\PC Files\\02 Work\\01 Jerome\\01 English Teaching\\09 Coding\\start-autosync.bat\")",
      "Read(//c/Users/admin/Downloads/**)",
      "Bash(ren:*)",
      "Bash(\"C:\\Users\\admin\\PC Files\\02 Work\\01 Jerome\\01 English Teaching\\09 Coding\")",
      "Bash(move \"working classes\" \"working-classes\")",
      "Bash(move:*)",
      "Bash(robocopy:*)"
    ],
    "deny": [],
    "ask": []
  }
}